<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: html5 | Saturday Programmer]]></title>
  <link href="http://sat-pg.com/blog/categories/html5/atom.xml" rel="self"/>
  <link href="http://sat-pg.com/"/>
  <updated>2013-06-08T23:41:27+09:00</updated>
  <id>http://sat-pg.com/</id>
  <author>
    <name><![CDATA[torub]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[SVCのテスト]]></title>
    <link href="http://sat-pg.com/blog/2013/05/19/svctest.html"/>
    <updated>2013-05-19T11:35:00+09:00</updated>
    <id>http://sat-pg.com/blog/2013/05/19/svctest</id>
    <content type="html"><![CDATA[<p>SVCのサンプルを記載します。</p>

<ul>
<li><a href="#base">基本図形</a></li>
<li><a href="#gra">グラデーション</a></li>
<li><a href="#poly">線、ポリゴン</a></li>
<li><a href="#text">テキスト</a></li>
<li><a href="#animation">アニメーション</a></li>
<li><a href="#sanko">参考</a></li>
</ul>


<!-- more -->


<h2><a name="base"></a>基本図形</h2>

<ul>
<li>rect: 長方形</li>
<li>line: 直線</li>
<li>circle: 円</li>
<li>ellipse: 楕円</li>
</ul>


<h4>サンプル</h4>

<p>```html</p>

<pre><code>&lt;svg width="600" height="300"&gt;
    &lt;rect x="100" y="10" rx="20" ry="10" width="400" height="200" fill="lightblue" /&gt;
    &lt;line x1="100" y1="50" x2="400" y2="200" stroke-width="20" stroke="blue" stroke-linecap="round" /&gt;
    &lt;circle cx="250" cy="150" r="50" fill="red" /&gt;
    &lt;ellipse cx="450" cy="50" rx="50" ry="20" fill="green" /&gt;
&lt;/svg&gt;
</code></pre>

<p>```</p>

<dl>
    <svg width="600" height="300">
        <rect x="100" y="10" rx="20" ry="10" width="400" height="200" fill="lightblue" />
        <line x1="100" y1="50" x2="400" y2="200" stroke-width="20" stroke="blue" stroke-linecap="round" />
        <circle cx="250" cy="150" r="50" fill="red" />
        <ellipse cx="450" cy="50" rx="50" ry="20" fill="green" />
    </svg>
</dl>


<h2><a name="gra"></a>グラデーション</h2>

<ul>
<li>defsタグの中で設定の定義ができる。</li>
<li>linearGradient: 直線上のグラデーション</li>
<li>radialGradient: 円形のグラデーション</li>
</ul>


<h4>サンプル</h4>

<p>```html</p>

<pre><code>&lt;svg width="400" height="200"&gt;
    &lt;defs&gt;
        &lt;linearGradient id="g1" x1="0" y1="0" x2="1" y2="0.5"&gt;
            &lt;stop offset="0" stop-color="skyblue" /&gt;
            &lt;stop offset="0.5" stop-color="pink" /&gt;
            &lt;stop offset="1" stop-color="yellow" stop-opacity="0.5" /&gt;                  
        &lt;/linearGradient&gt;
        &lt;radialGradient id="g2" cx="0.5" cy="0.5" r="0.5"&gt;
            &lt;stop offset="0" stop-color="lightgreen" /&gt;
            &lt;stop offset="0.8" stop-color="pink" /&gt;
            &lt;stop offset="1" stop-color="yellow" stop-opacity="0.5" /&gt;                  
        &lt;/radialGradient&gt;
    &lt;/defs&gt;
    &lt;rect width="200" height="200" fill="url(#g1)" /&gt;
    &lt;rect x="200" width="400" height="200" fill="url(#g2)" /&gt;
&lt;/svg&gt;
</code></pre>

<p>```</p>

<dl>
    <svg width="600" height="250">
        <defs>
            <linearGradient id="g1" x1="0" y1="0" x2="1" y2="0.5">
                <stop offset="0" stop-color="skyblue" />
                <stop offset="0.5" stop-color="pink" />
                <stop offset="1" stop-color="yellow" stop-opacity="0.5" />                  
            </linearGradient>
            <radialGradient id="g2" cx="0.5" cy="0.5" r="0.5">
                <stop offset="0" stop-color="lightgreen" />
                <stop offset="0.8" stop-color="pink" />
                <stop offset="1" stop-color="yellow" stop-opacity="0.5" />                  
            </radialGradient>
        </defs>
        <rect width="300" height="200" fill="url(#g1)" />
        <rect x="300" width="300" height="200" fill="url(#g2)" />
    </svg>
</dl>


<h2><a name="poly"></a>線、ポリゴン</h2>

<ul>
<li>polygonタグで図形描画: 座標を複数記入すると繋いでくれる</li>
<li>pathタグで直線

<ul>
<li>M: 移動する座標を記載</li>
<li>l: 線を引く座標を記載(?)</li>
<li>h: 水平方向に線を引く</li>
<li>v: 垂直方向に線を引く</li>
</ul>
</li>
</ul>


<h4>サンプル</h4>

<p>```html</p>

<pre><code>&lt;svg width="600" height="300"&gt;
    &lt;polygon points="100 50 250 100 50 100 100 0" stroke="black" fill="url(#g1)" /&gt;
    &lt;!-- (100,150) から x方向に50、y方向に50の線を引き、水平方向に50、
        垂直方向に30、水平方向に-30の線を引く   --&gt;
    &lt;path d="M100 150 l50 50 h50 v30 h-30" stroke="black" fill="none" /&gt;
&lt;/svg&gt;
</code></pre>

<p>```</p>

<dl>
    <svg width="600" height="300">
        <polygon points="100 50 250 100 50 100 100 0" stroke="black" fill="url(#g1)" />
        <path d="M100 150 l50 50 h50 v30 h-30" stroke="black" fill="none" />
    </svg>
</dl>


<h2><a name="text"></a>テキスト</h2>

<ul>
<li>テキストタグで記載</li>
<li>rotateで傾けたりも可能</li>
</ul>


<h4>サンプル</h4>

<p>```html</p>

<pre><code>&lt;svg width="500" height="300"&gt;
    &lt;rect width="500" height="300" fill="black" /&gt;
    &lt;text x="100" y="100" font-size="96" fill="lightpink" stroke="blue"
        stroke-width="3"&gt;Hello!&lt;/text&gt;
    &lt;text x="100" y="200" font-size="96" fill="lightblue" stroke="blue" 
        stroke-width="3" rotate="30"&gt;World!!&lt;/text&gt; 
&lt;/svg&gt;
</code></pre>

<p>```</p>

<dl>
    <svg width="500" height="300">
        <rect width="500" height="300" fill="black" />
        <text x="100" y="100" font-size="96" fill="lightpink" stroke="blue"
            stroke-width="3">Hello!</text>
        <text x="100" y="200" font-size="96" fill="lightblue" stroke="blue" 
            stroke-width="3" rotate="30">World!!</text> 
    </svg>
</dl>


<h2><a name="animation"></a>アニメーション</h2>

<ul>
<li>図形タグの中にanimateタグを追記して作成する</li>
<li>属性を指定して、fromとtoで値を指定し、durで時間を指定</li>
<li>repeatCountで回数を指定。無限回はindefinite</li>
</ul>


<h4>サンプル</h4>

<p>```html</p>

<pre><code>&lt;svg width="500" height="250"&gt;
    &lt;rect width="10" height="10" fill="url(#g1)" &gt;
        &lt;animate attributeName="width" from="10" to="500" dur="5s" repeatCount="10" /&gt;
        &lt;animate attributeName="height" from="10" to="200" dur="3s" repeatCount="10" /&gt;
    &lt;/rect&gt;
&lt;/svg&gt;
</code></pre>

<p>```</p>

<dl>
    <svg width="500" height="250">
        <rect width="10" height="10" fill="url(#g1)" >
            <animate attributeName="width" from="10" to="500" dur="5s" repeatCount="10" />
            <animate attributeName="height" from="10" to="200" dur="3s" repeatCount="indefinite" />
        </rect>
    </svg>
</dl>


<h2><a name="js"></a>JavaScriptとの連携</h2>

<ul>
<li>setAttributeメソッドを利用して、JavaScriptから値の変更が容易に可能</li>
</ul>


<h4>ボタン押すたびに変更するサンプル</h4>

<p>```html</p>

<pre><code>&lt;svg width="600" height="250"&gt;
    &lt;rect width="600" height="250" stroke="black" fill="white" /&gt;
    &lt;circle cx="100" cy="100" r="20" fill="white" name="test" /&gt;
    &lt;circle cx="100" cy="100" r="20" fill="white" name="test" /&gt;
    &lt;circle cx="100" cy="100" r="20" fill="white" name="test" /&gt;
    &lt;circle cx="100" cy="100" r="20" fill="white" name="test" /&gt;
    &lt;circle cx="100" cy="100" r="20" fill="white" name="test" /&gt;
    &lt;circle cx="100" cy="100" r="20" fill="white" name="test" /&gt;
    &lt;circle cx="100" cy="100" r="20" fill="white" name="test" /&gt;
    &lt;circle cx="100" cy="100" r="20" fill="white" name="test" /&gt;
    &lt;circle cx="100" cy="100" r="20" fill="white" name="test" /&gt;
&lt;/svg&gt;
&lt;button type="button" onclick="
    var c = document.getElementsByName('test');
    for (var i = 0; i &lt; c.length; i ++) {
        c[i].setAttribute('cx', r(500));
        c[i].setAttribute('cy', r(250));
        c[i].setAttribute('r', r(100));
        c[i].setAttribute('fill', 'rgb(' +r(255)+',' +r(255)+',' +r(255)+')');
    }
    function r(n) {
        return Math.floor(Math.random() * (n + 1));
    }
"&gt;reload&lt;/button&gt;
</code></pre>

<p>```</p>

<dl>
    <svg width="600" height="250">
        <rect width="600" height="250" stroke="black" fill="white" />
        <circle cx="100" cy="100" r="20" fill="white" name="test" />
        <circle cx="100" cy="100" r="20" fill="white" name="test" />
        <circle cx="100" cy="100" r="20" fill="white" name="test" />
        <circle cx="100" cy="100" r="20" fill="white" name="test" />
        <circle cx="100" cy="100" r="20" fill="white" name="test" />
        <circle cx="100" cy="100" r="20" fill="white" name="test" />
        <circle cx="100" cy="100" r="20" fill="white" name="test" />
        <circle cx="100" cy="100" r="20" fill="white" name="test" />
        <circle cx="100" cy="100" r="20" fill="white" name="test" />
    </svg>
    <button type="button" onclick="
        var c = document.getElementsByName('test');
        for (var i = 0; i < c.length; i ++) {
            c[i].setAttribute('cx', r(500));
            c[i].setAttribute('cy', r(250));
            c[i].setAttribute('r', r(100));
            c[i].setAttribute('fill', 'rgb(' +r(255)+',' +r(255)+',' +r(255)+')');
        }
        function r(n) {
            return Math.floor(Math.random() * (n + 1));
        }
    ">reload</button><br><br>
</dl>


<h2>参考</h2>

<ul>
<li><a href="http://dotinstall.com/lessons/basic_svg">ドットインストール</a> を参考にさせて頂きました。</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WebRTCサンプル]]></title>
    <link href="http://sat-pg.com/blog/2013/05/06/webrtc.html"/>
    <updated>2013-05-06T04:05:00+09:00</updated>
    <id>http://sat-pg.com/blog/2013/05/06/webrtc</id>
    <content type="html"><![CDATA[<p>WebRTCのサンプルを動かしてみたのでまとめます。</p>

<h3><a href="http://dl.dropboxusercontent.com/u/321302/html5/webrtc.html">カメラから映像を取り込み、そのまま流すのみのサンプル</a></h3>

<p>2013/5/6現在、MacのGoogle Chorome Version 26では以下を読み込んで動作しました。
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span> (webrtc.html)</span> <a href='/downloads/code/webrtc.html'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="cp">&lt;!DOCTYPE html&gt;</span>
</span><span class='line'><span class="nt">&lt;html</span> <span class="na">lang=</span><span class="s">&quot;ja&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;head&gt;</span>
</span><span class='line'>    <span class="nt">&lt;meta</span> <span class="na">charset=</span><span class="s">&quot;utf-8&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;title&gt;</span>WebRTC<span class="nt">&lt;/title&gt;</span>
</span><span class='line'>    <span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;http://code.jquery.com/jquery-1.9.1.min.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/head&gt;</span>
</span><span class='line'>  <span class="nt">&lt;body&gt;</span>
</span><span class='line'>    <span class="nt">&lt;video</span> <span class="na">id=</span><span class="s">&quot;myvideo&quot;</span> <span class="na">width=</span><span class="s">&quot;320&quot;</span> <span class="na">height=</span><span class="s">&quot;240&quot;</span> <span class="na">autoplay</span> <span class="na">style=</span><span class="s">&quot;border:1px solid black&quot;</span><span class="nt">&gt;&lt;/video&gt;</span>
</span><span class='line'>    <span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nx">$</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">navigator</span><span class="p">.</span><span class="nx">webkitGetUserMedia</span><span class="p">({</span><span class="nx">video</span><span class="o">:</span><span class="kc">true</span><span class="p">,</span> <span class="nx">audio</span><span class="o">:</span><span class="kc">true</span><span class="p">},</span> <span class="kd">function</span><span class="p">(</span><span class="nx">stream</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="kd">var</span> <span class="nx">myvideo</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="s2">&quot;#myvideo&quot;</span><span class="p">).</span><span class="nx">get</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
</span><span class='line'>          <span class="nx">myvideo</span><span class="p">.</span><span class="nx">src</span> <span class="o">=</span> <span class="nx">webkitURL</span><span class="p">.</span><span class="nx">createObjectURL</span><span class="p">(</span><span class="nx">stream</span><span class="p">);</span>
</span><span class='line'>      <span class="p">});</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>    <span class="nt">&lt;/script&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/body&gt;</span>
</span><span class='line'><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Androidでは、version26を利用し、アドレスバーに
<code>about:flags</code>と入力後、以下の「WebRTCを有効にする」を選択してChromeを再起動することで
実行が可能になります。</p>

<p><img src="/images/cap/webrtc_android.png"></p>

<p>iOSは現状ではSafari, Chromeとも動作しない模様です。</p>
]]></content>
  </entry>
  
</feed>
